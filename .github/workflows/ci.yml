# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master", "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Check code with eslint
      run: npm run check

    - name: Migration UP
      run: npm run migrate:up
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

    - name: Run tests
      run: npm run test
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

    - name: Migration DOWN
      run: npm run migrate:down
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        flags: smart-tests
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Build app
      run: npm run build --if-present
